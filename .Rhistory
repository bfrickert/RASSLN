guides(fill=guide_legend(label.position="bottom")) +
geom_ribbon(data=p1,aes(ymin=lwr,ymax=upr),alpha=.2,fill='salmon', colour='salmon') +
geom_ribbon(data=p2,aes(ymin=lwr,ymax=upr),alpha=.4,fill='lightblue', colour='lightblue')
# DIAGNOSTICS
par(mfrow=c(2,2))
plot(fit.wt.am)
suppressWarnings(par(.pardefault))
influence.measures(fit.wt.am)
par(mfrow=c(2,2))
plot(fit.disp.am)
suppressWarnings(par(.pardefault))
influence.measures(fit.disp.am)
resid(fit.wt.am)/(1-hatvalues(fit.wt.am)) # the difference in the response and the predicted response at data point i, where it was not included in the model fitting.
resid(fit.disp.am)/(1-hatvalues(fit.disp.am)) # the difference in the response and the predicted response at data point i, where it was not included in the model fitting.
round(dfbetas(fit.disp.am),3) # change in individual coefficients when the ith point is deleted in fitting model
round(dffits(fit.disp.am),3) # change in the predicted response when the ith point is deleted in fitting model
round(cooks.distance(fit.disp.am),3) # overall change in the coefficients when the ith point is deleted
plot(predict(fit.wt.am),resid(fit.wt.am),pch=8) # residual plot - find pattern in the residuals.
plot(predict(fit.disp.am),resid(fit.disp.am),pch=8) # residual plot - find pattern in the residuals.
fit.wt.am <- lm(mpg~wt * factor(am),mtcars)
summary(fit.wt.am)
fit.disp.am <- lm(mpg~disp * factor(am),mtcars)
summary(fit.disp.am)
fit.qsec.wt.am <- lm(mpg~qsec * factor(am),mtcars)
summary(fit.qsec.wt.am)
fit.carb.am <- lm(mpg~carb*factor(am),mtcars)
summary(fit.carb.am)
sumCoef <- summary(fit.disp.am)$coefficients
sumCoef[2,1] + c(-1,1) + qt(.975, df=fit.disp.am$df) * sumCoef[2,2] #95% confidence interval of change in mpg for each cu. in of cylinder displacement--automatic
sumCoef[2,1] + sumCoef[4,1] + c(-1,1) + qt(.975, df=fit.disp.am$df) * sumCoef[4,2] #95% confidence interval of change in mpg for each cu. in of cylinder displacement--manual
sumCoef.wt <- summary(fit.wt.am)$coefficients
sumCoef.wt[2,1] + c(-1,1) + qt(.975, df=fit.wt.am$df) * sumCoef.wt[2,2] #95% confidence interval of change in mpg for every 1,000 of weight--automatic
sumCoef.wt[2,1] + sumCoef.wt[4,1] + c(-1,1) + qt(.975, df=fit.wt.am$df) * sumCoef.wt[4,2] #95% confidence interval of change in mpg for every 1,000 of weight--manual
fit.cyl.am <- lm(mpg~cyl*factor(am),mtcars)
summary(fit.cyl.am)
fit.hp.am <- lm(mpg~hp*factor(am),mtcars)
summary(fit.hp.am)
fit.qsec.am <- lm(mpg~qsec*factor(am),mtcars)
summary(fit.qsec.am)
fit.wt.am <- lm(mpg~wt*factor(am),mtcars)
summary(fit.wt.am)$coefficients
fit.disp.am <- lm(mpg~disp*factor(am),mtcars)
summary(fit.disp.am)$coefficients
library(dplyr)
tg.oj = filter(mtcars,am==0)$mpg; tg.vc = filter(mtcars,am==1)$mpg
# sp <- sqrt(((18*sd(tg.oj)^2)+(12*sd(tg.vc)^2))/(30))
sp <- sqrt(((18*(0.7856^2))+(12*(1.4447^2)))/(30))
round(sumCoef[2,1]-(sumCoef[2,1]+sumCoef[4,1]) + c(-1,1) * qt(.975,30) * sp * (1/19 + 1/3)^.5,3)
round(sumCoef.wt[2,1]-(sumCoef.wt[2,1]+sumCoef.wt[4,1]) + c(-1,1) * qt(.975,30) * sp * (1/19 + 1/3)^.5,3)
summary(fit.wt.am)
influence.measurements(fit.wt.am)
influence.measures(fit.wt.am)
dffits(fit.wt.am)
?cov.r
?influence.measures
covratio(fit.wt.am)
?covratio
rstandard(fit.wt.am)
rstudent(fit.wt.am)
hatvalues(fit.wt.am)
influence.measures(fit.wt.am)
cooks.distance(fit.wt.am)
influence.measures(fit.wt.am)
round(cooks.distance(fit.wt.am), 3)
par(mfrow=c(2,2))
plot(fit.wt.am)
suppressWarnings(par(.pardefault))
influence.measures(fit.wt.am)
?influence.measures
mtcars
data.frame(influence.measures(fit.wt.am))
as.data.frame(influence.measures(fit.wt.am))
class(influence.measures(fit.wt.am))
as.matrix(influence.measures(fit.wt.am))
matrix(influence.measures(fit.wt.am))
inf(fit.wt.am)
infl(fit.wt.am)
hatvalues(fit.wt.am)
?covratio
influence(fit.wt.am)
plot(rstudent(fit.wt.am) ~ hatvalues(fit.wt.am)) # recommended by some
influence(fit.wt.am)
?covratio
inflm.SR <- influence.measures(fit.wt.am)
summary(inflm.SR)
summary(influence.measures(fit.wt.am))
mtcars$trans = ''
mtcars[mtcars$am==0,]$trans = 'automatic'
mtcars[mtcars$am==1,]$trans = 'manual'
with(mtcars,plot(factor(trans),mpg,xlab='transmission',ylab='mpg');title("Mileage by Transmission Type"))
mtcars$trans = ''
mtcars[mtcars$am==0,]$trans = 'automatic'
mtcars[mtcars$am==1,]$trans = 'manual'
with(mtcars,plot(factor(trans),mpg,xlab='transmission',ylab='mpg'))
title("Mileage by Transmission Type")
?covariate
?cov.r
?influence.measures
summary(fit.wt.am)
sd(mtcars$mpg)
summary(mtcars$mpg)
str(mtcars$mpg)
summary(fit.wt.am)
interval.auto.wt
fit.wt.am <- lm(mpg~wt * factor(am),mtcars)
sumCoef.wt <- summary(fit.wt.am)$coefficients
interval.auto.wt <- sumCoef.wt[2,1] + c(-1,1) + qt(.975, df=fit.wt.am$df) * sumCoef.wt[2,2] #95% confidence interval of change in mpg for every 1,000 of weight--automatic
interval.man.wt <- sumCoef.wt[2,1] + sumCoef.wt[4,1] + c(-1,1) + qt(.975, df=fit.wt.am$df) * sumCoef.wt[4,2] #95% confidence interval of change in mpg for every 1,000 of weight--manual
interval.auto.wt
sumCoef.wt
sumCoef.wt[2,1]
qt(.975, df=fit.wt.am$df) * sumCoef.wt[2,2]
-3.785908 + 1.609327
fit.wt.am <- lm(mpg~wt * factor(am),mtcars)
sumCoef.wt <- summary(fit.wt.am)$coefficients
interval.auto.wt <- sumCoef.wt[2,1] + c(-1,1) * qt(.975, df=fit.wt.am$df) * sumCoef.wt[2,2] #95% confidence interval of change in mpg for every 1,000 of weight--automatic
interval.man.wt <- sumCoef.wt[2,1] + sumCoef.wt[4,1] + c(-1,1) * qt(.975, df=fit.wt.am$df) * sumCoef.wt[4,2] #95% confidence interval of change in mpg for every 1,000 of weight--manual
interval.auto.wt
interval.man.wt
.pardefault <- par()
fit.disp.am <- lm(mpg~disp * factor(am),mtcars)
sumCoef <- summary(fit.disp.am)$coefficients
interval.auto <- sumCoef[2,1] + c(-1,1) * qt(.975, df=fit.disp.am$df) * sumCoef[2,2] #95% confidence interval of change in mpg for each cu. in of cylinder displacement--automatic
interval.man <- sumCoef[2,1] + sumCoef[4,1] + c(-1,1) * qt(.975, df=fit.disp.am$df) * sumCoef[4,2] #95% confidence interval of change in mpg for each cu. in of cylinder displacement--manual
sp <- sqrt(((18*sd(mtcars[mtcars$am==0]$mpg)^2)+(12*sd(mtcars[mtcars$am==1]$mpg)^2))/(30))
mtcars[mtcars$am==0]$mpg
mtcars
mtcars$am
sp <- sqrt(((18*sd(mtcars[mtcars$am==0,]$mpg)^2)+(12*sd(mtcars[mtcars$am==1,]$mpg)^2))/(30))
round(mean(mtcars[mtcars$am==0]$mpg,)-mean(mtcars[mtcars$am==1,]$mpg) + c(-1,1) * qt(.975,30) * sp * (1/18 + 1/12)^.5,3)
round(mean(mtcars[mtcars$am==0,]$mpg)-mean(mtcars[mtcars$am==1,]$mpg) + c(-1,1) * qt(.975,30) * sp * (1/18 + 1/12)^.5,3)
source('~/.active-rstudio-document', echo=TRUE)
summary(fit.wt.am)
round(mean(mtcars[mtcars$am==0,]$mpg,4)
)
round(mean(mtcars[mtcars$am==1,]$mpg,4))
round(mean(mtcars[mtcars$am==1,]$mpg,5))
mean(mtcars[mtcars$am==1,]$mpg)
fit.wt.am
summary(fit.wt.am)
mean(mtcars[mtcars$am==1,]$mpg)
round(mean(mtcars[mtcars$am==1,]$mpg,1))
mean(mtcars[mtcars$am==0,]$mpg)
library(MASS)
?shuttle
?glm
?shuttle
head(shuttle)
nrow(shuttle)
unique(shuttle$use)
shuttle$u.se <- 0
shuttle[shuttle$use=='auto',]$u.se <- 1
shuttle[shuttle$use!='auto',]$u.se <- 0
head(shuttle)
unique(shuttle$wind)
glm(u.se ~ wind, data=shuttle, family='binomial')
shuttle.wind <- glm(u.se ~ wind, data=shuttle, family='binomial')
summary(shuttle.wind)
anova(shuttle.wind)
exp(confint(shuttle.wind))
exp(coef(shuttle.wind))
shuttle.wind <- glm(u.se ~ wind, data=shuttle[shuttle$use=='auto',], family='binomial')
exp(cbind(OR = coef(shuttle.wind), confint(shuttle.wind)))
shuttle.wind <- glm(u.se ~ wind, data=shuttle, family='binomial')
exp(cbind(OR = coef(shuttle.wind), confint(shuttle.wind)))
shuttle[shuttle$use=='auto',]$use <- 1
head(shuttle)
nrow(shuttle)
head(shuttle)
shuttle[shuttle$use=='auto',]$u.se <- 1
shuttle[shuttle$use!='auto',]$u.se <- 0
shuttle$u.se <- 0
shuttle[shuttle$use=='auto',]$u.se <- 1
shuttle[shuttle$use!='auto',]$u.se <- 0
head(shttle)
head(shuttle)
shuttle$h.ead < shuttle$head
head(shuttle)
shuttle$h.ead <- shuttle$head
shuttle[shuttle$head=='head',]$h.ead <- 0
head(shuttle)
shuttle$h.ead <- shuttle$head
head(shuttle)
shuttle$w.ind <- shuttle$wind
shuttle[shuttle$wind=='head',]$w.ind <- 0
library(MASS)
?shuttle
head(shuttle)
nrow(shuttle)
unique(shuttle$use)
shuttle$u.se <- 0
shuttle$w.ind <- shuttle$wind
shuttle[shuttle$use=='auto',]$u.se <- 1
shuttle[shuttle$use!='auto',]$u.se <- 0
unique(shuttle$wind)
shuttle.wind <- glm(u.se ~ wind, data=shuttle, family='binomial')
summary(shuttle.wind)
exp(coef(shuttle.wind))
shuttle.wind.magn <- glm(u.se ~ wind * magn, data=shuttle, family='binomial')
summary(shuttle.wind.magn)
exp(cbind(OR = coef(shuttle.wind.magn), confint(shuttle.wind.magn)))
shuttle.wind.magn <- glm(u.se ~ wind + magn, data=shuttle, family='binomial')
summary(shuttle.wind.magn)
exp(cbind(OR = coef(shuttle.wind.magn), confint(shuttle.wind.magn)))
shuttle.wind.magn <- glm(u.se ~ wind * magn, data=shuttle, family='binomial')
summary(shuttle.wind.magn)
exp(cbind(OR = coef(shuttle.wind.magn), confint(shuttle.wind.magn)))
shuttle.wind.magn <- glm(u.se ~ wind + magn, data=shuttle, family='binomial')
summary(shuttle.wind.magn)
exp(cbind(OR = coef(shuttle.wind.magn), confint(shuttle.wind.magn)))
exp(cbind(OR = coef(shuttle.wind), confint(shuttle.wind)))
shuttle[shuttle$use=='head',]$w.ind <- 1
shuttle[shuttle$use!='head',]$w.ind <- 0
shuttle$w.ind <- 0
shuttle[shuttle$use=='head',]$w.ind <- 1
shuttle[shuttle$use!='head',]$w.ind <- 0
shuttle[shuttle$use=='head',]$w.ind <- 1
shuttle[shuttle$wind=='head',]$w.ind <- 1
shuttle[shuttle$wind!='head',]$w.ind <- 0
shuttle.wind <- glm(u.se ~ w.ind, data=shuttle, family='binomial')
summary(shuttle.wind)
anova(shuttle.wind)
exp(confint(shuttle.wind))
exp(coef(shuttle.wind))
exp(cbind(OR = coef(shuttle.wind), confint(shuttle.wind)))
shuttle.wind.magn <- glm(u.se ~ w.ind + magn, data=shuttle, family='binomial')
summary(shuttle.wind.magn)
exp(cbind(OR = coef(shuttle.wind.magn), confint(shuttle.wind.magn)))
shuttle.wind.magn <- glm(u.se ~ w.ind * magn, data=shuttle, family='binomial')
summary(shuttle.wind.magn)
exp(cbind(OR = coef(shuttle.wind.magn), confint(shuttle.wind.magn)))
exp(cbind(OR = coef(shuttle.wind), confint(shuttle.wind)))
shuttle[shuttle$use=='auto',]$u.se <- 0
shuttle[shuttle$use!='auto',]$u.se <- 1
shuttle.wind <- glm(u.se ~ w.ind, data=shuttle, family='binomial')
summary(shuttle.wind)
shuttle[shuttle$use=='auto',]$u.se <- 1
shuttle[shuttle$use!='auto',]$u.se <- 0
unique(shuttle$wind)
shuttle[shuttle$wind=='head',]$w.ind <- 1
shuttle[shuttle$wind!='head',]$w.ind <- 0
shuttle.wind <- glm(u.se ~ w.ind, data=shuttle, family='binomial')
summary(shuttle.wind)
anova(shuttle.wind)
exp(confint(shuttle.wind))
exp(coef(shuttle.wind))
exp(cbind(OR = coef(shuttle.wind), confint(shuttle.wind)))
summary(shuttle.wind)
shuttle[shuttle$use=='auto',]$u.se <- 0
shuttle[shuttle$use!='auto',]$u.se <- 1
unique(shuttle$wind)
shuttle[shuttle$wind=='head',]$w.ind <- 1
shuttle[shuttle$wind!='head',]$w.ind <- 0
shuttle.wind <- glm(u.se ~ w.ind, data=shuttle, family='binomial')
summary(shuttle.wind)
head(InsectSprays)
pois <- glm(count~factor(spray), data=InsectSprays, family='poisson')
summary(pois)
?relevel
pois <- glm(count~factor(spray), data=relevel(InsectSprays$spray, ref="B"), family='poisson')
pois <- glm(count~factor(spray), data=relevel(InsectSprays$spray, ref="B"), family='poisson')
insects2 <- relevel(InsectSprays$spray, ref="B")
insects2
InsectSprays <- relevel(InsectSprays$spray, ref="B")
pois <- glm(count~factor(spray), data=InsectSprays, family='poisson')
head(InsectSprays)
InsectSprays$spray <- relevel(InsectSprays$spray, ref="B")
pois <- glm(count~factor(spray), data=InsectSprays, family='poisson')
summary(pois)
InsectSprays$spray <- relevel(InsectSprays$spray, ref="A")
pois <- glm(count~factor(spray), data=InsectSprays, family='poisson')
summary(pois)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
splineTerms <- sapply(knots, function(knot) (x>knot)*(x-knot))
knots <- 0
splineTerms <- sapply(knots, function(knot) (x>knot)*(x-knot))
xMat <- cbind(1,x,splineTerms)
yhat <- predict(lm(y~xMat - 1))
plot(x,y,frame=F,pch=21,bg='lightblue',cex=2)
lines(x,yhat,col='red',lwd=2)
summary(lm(y~xMat-1))
summary(lm(y~xMat))
shuttle$u.se <- 0
shuttle$w.ind <- 0
shuttle[shuttle$use=='auto',]$u.se <- 0
shuttle[shuttle$use!='auto',]$u.se <- 1
unique(shuttle$wind)
shuttle[shuttle$wind=='head',]$w.ind <- 1
shuttle[shuttle$wind!='head',]$w.ind <- 0
shuttle.wind <- glm(u.se ~ w.ind, data=shuttle, family='binomial')
summary(shuttle.wind)
shuttle$u.se <- 0
shuttle$w.ind <- 0
shuttle[shuttle$use=='auto',]$u.se <- 1
shuttle[shuttle$use!='auto',]$u.se <- 0
unique(shuttle$wind)
shuttle[shuttle$wind=='head',]$w.ind <- 1
shuttle[shuttle$wind!='head',]$w.ind <- 0
shuttle.wind <- glm(u.se ~ w.ind, data=shuttle, family='binomial')
summary(shuttle.wind)
head(InsectSprays)
InsectSprays$spray <- relevel(InsectSprays$spray, ref="A")
pois <- glm(count~factor(spray), data=InsectSprays, family='poisson')
summary(pois)
InsectSprays$spray <- relevel(InsectSprays$spray, ref="B")
pois <- glm(count~factor(spray), data=InsectSprays, family='poisson')
summary(pois)
coef(pois)
round(exp(coef(lm(I(log(count))~spray,data=InsectSprays))),5)
log.pois <- round(exp(coef(lm(I(log(count+1))~spray,data=InsectSprays))),5)
summary(pois)
round(exp(coef(lm(I(log(count+1))~spray,data=InsectSprays))),5)
InsectSprays$spray <- relevel(InsectSprays$spray, ref="A")
round(exp(coef(lm(I(log(count+1))~spray,data=InsectSprays))),5)
InsectSprays$spray <- relevel(InsectSprays$spray, ref="5")
round(exp(coef(lm(I(log(count+1))~spray,data=InsectSprays))),5)
InsectSprays$spray <- relevel(InsectSprays$spray, ref="B")
log.pois <- round(exp(coef(lm(I(log(count+1))~spray,data=InsectSprays))),5)
round(exp(coef(lm(I(log(count+1))~spray,data=InsectSprays))),5)
round(exp(coef(lm(I(log(count+.5))~spray,data=InsectSprays))),5)
round(exp(coef(lm(I(log(count+.1.1))~spray,data=InsectSprays))),5)
round(exp(coef(lm(I(log(count+.1.1))~spray,data=InsectSprays))),5)
round(exp(coef(lm(I(log(count+1.1))~spray,data=InsectSprays))),5)
?glm
pois <- glm(count~factor(spray), data=InsectSprays, family='poisson')
summary(pois)
pois <- glm(count~factor(spray), data=InsectSprays, offset=log(10), family='poisson')
pois <- glm(count~factor(spray), data=InsectSprays, offset=24, family='poisson')
pois <- glm(count~factor(spray), data=InsectSprays, offset(log(10)), family='poisson')
pois <- glm(count~factor(spray) + offset(log(10)), data=InsectSprays, family='poisson')
pois <- glm(count~factor(spray) + offset(log(2)), data=InsectSprays, family='poisson')
Y  <- c(15,  7, 36,  4, 16, 12, 41, 15)
N  <- c(4949, 3534, 12210, 344, 6178, 4883, 11256, 7125)
x1 <- c(-0.1, 0, 0.2, 0, 1, 1.1, 1.1, 1)
x2 <- c(2.2, 1.5, 4.5, 7.2, 4.5, 3.2, 9.1, 5.2)
glm(Y ~ offset(log(N)) + (x1 + x2), family=poisson)
n <- N + log(10)
glm(Y ~ offset(I(log(N) + log(10))) + (x1 + x2), family=poisson)
lm(mpg~wt,data=mtcars)
summary(lm(mpg~wt,data=mtcars))
manu<-mtcars$mpg[mtcars$am==1]
auto<-mtcars$mpg[mtcars$am==0]
t.test(auto,manu)
nrow(manu)
auto
manu
packages.install('igraph')
install.packages('igraph')
adj.mat <- matrix(sample(c(0,1), 9, replace=TRUE), nr=3)
g <- graph.adjacency(adj.mat)
plot(g)
library(igraph)
adj.mat <- matrix(sample(c(0,1), 9, replace=TRUE), nr=3)
g <- graph.adjacency(adj.mat)
plot(g)
adj.mat
getwd()
setwd("C:/dev/igraph/data")
setwd("..")
getwd()
# load termDocMatrix
load(“data/termDocMatrix.rdata”)
# inspect part of the matrix
termDocMatrix[5:10,1:20]
# change it to a Boolean matrix
termDocMatrix[termDocMatrix>=1] <- 1
# transform into a term-term adjacency matrix
termMatrix <- termDocMatrix %*% t(termDocMatrix)
# inspect terms numbered 5 to 10
termMatrix[5:10,5:10]
load(“data/termDocMatrix.rdata”)
load(“data//termDocMatrix.rdata”)
load('data//termDocMatrix.rdata')
# inspect part of the matrix
termDocMatrix[5:10,1:20]
# change it to a Boolean matrix
termDocMatrix[termDocMatrix>=1] <- 1
# transform into a term-term adjacency matrix
termMatrix <- termDocMatrix %*% t(termDocMatrix)
# inspect terms numbered 5 to 10
termMatrix[5:10,5:10]
library(igraph)
# build a graph from the above matrix
g <- graph.adjacency(termMatrix, weighted=T, mode = “undirected”)
# remove loops
g <- simplify(g)
# set labels and degrees of vertices
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
# set seed to make the layout reproducible
set.seed(3952)
layout1 <- layout.fruchterman.reingold(g)
plot(g, layout=layout1)
library(igraph)
# build a graph from the above matrix
g <- graph.adjacency(termMatrix, weighted=T, mode = “undirected”)
g <- graph.adjacency(termMatrix, weighted=T, mode = 'undirected')
# remove loops
g <- simplify(g)
# set labels and degrees of vertices
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
# set seed to make the layout reproducible
set.seed(3952)
layout1 <- layout.fruchterman.reingold(g)
plot(g, layout=layout1)
V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
egam <- (log(E(g)$weight)+.4) / max(log(E(g)$weight)+.4)
E(g)$color <- rgb(.5, .5, 0, egam)
E(g)$width <- egam
# plot the graph in layout1
plot(g, layout=layout1)
# set seed to make the layout reproducible
set.seed(3952)
layout1 <- layout.fruchterman.reingold(g)
plot(g, layout=layout1)
V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
egam <- (log(E(g)$weight)+.4) / max(log(E(g)$weight)+.4)
E(g)$color <- rgb(.5, .5, 0, egam)
E(g)$width <- egam
# plot the graph in layout1
plot(g, layout=layout1)
# set seed to make the layout reproducible
set.seed(3952)
layout1 <- layout.fruchterman.reingold(g)
plot(g, layout=layout1)
library(igraph)
# build a graph from the above matrix
g <- graph.adjacency(termMatrix, weighted=T, mode = 'undirected')
# remove loops
g <- simplify(g)
# set labels and degrees of vertices
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
# set seed to make the layout reproducible
set.seed(3952)
layout1 <- layout.fruchterman.reingold(g)
plot(g, layout=layout1)
V(g)$label.cex <- 2.2 * V(g)$degree / max(V(g)$degree)+ .2
V(g)$label.color <- rgb(0, 0, .2, .8)
V(g)$frame.color <- NA
egam <- (log(E(g)$weight)+.4) / max(log(E(g)$weight)+.4)
E(g)$color <- rgb(.5, .5, 0, egam)
E(g)$width <- egam
# plot the graph in layout1
plot(g, layout=layout1)
library(igraph)
# build a graph from the above matrix
g <- graph.adjacency(termMatrix, weighted=T, mode = 'undirected')
# remove loops
g <- simplify(g)
# set labels and degrees of vertices
V(g)$label <- V(g)$name
V(g)$degree <- degree(g)
# set seed to make the layout reproducible
set.seed(3952)
layout1 <- layout.fruchterman.reingold(g)
plot(g, layout=layout1)
df <- read.table('data/bouts.tsv',header=F, sep='\t', stringsAsFactors=F)
setwd('c:/users/bfrickert/documents/github/cloudw')
getwd('../rassln')
setwd('../rassln')
library(dplyr)
df <- read.table('data/bouts.tsv',header=F, sep='\t', stringsAsFactors=F)
names(df) <- c('winner', 'loser','evt.id')
win.frequency<-data.frame(table(unlist(sapply(unlist(df$winner), FUN=function(x) strsplit(as.character(x),',')))), stringsAsFactors=F)
names(win.frequency) <- c('wrestler','freq')
loss.frequency<-data.frame(table(unlist(sapply(unlist(df$loser), FUN=function(x) strsplit(as.character(x),',')))), stringsAsFactors=F)
names(loss.frequency) <- c('wrestler','freq')
head(arrange(win.frequency, desc(freq)))
head(arrange(loss.frequency, desc(freq)))
my.losers <- cbind(2444,select(filter(df, grepl('(^|,)2444(,|$)', winner, perl=T)), id, loser))
select(filter(df, grepl('(^|,)2444(,|$)', winner, perl=T)), id, loser)
select(filter(df, grepl('(^|,)2444(,|$)', winner, perl=T)
)
)
filter(df, grepl('(^|,)2444(,|$)', winner, perl=T)
)
cbind(2444,select(filter(df, grepl('(^|,)2444(,|$)', winner, perl=T)), evt.id, loser))
my.losers <- cbind(2444,select(filter(df, grepl('(^|,)2444(,|$)', winner, perl=T)), evt.id, loser))
unique(my.losers$evt.id)
?paste
lapply(c(2444,27), get.losers)
get.losers <- function(win.id){
search.str <- paste('(^|,)',win.id,'(,|$)', sep="")
my.losers <- cbind(win.id,select(filter(df, grepl(search.str, winner, perl=T)), evt.id, loser))
return(my.losers)
}
lapply(c(2444,27), get.losers)
flatn.losers <- function(event.id, matches) {
my.winning.matches <- filter(matches,evt.id==event.id)
return(cbind(unique(matches$win.id),event.id, unlist(my.winning.matches$losers)))
}
get.losers <- function(win.id){
search.str <- paste('(^|,)',win.id,'(,|$)', sep="")
my.losers <- data.frame(cbind(win.id,select(filter(df, grepl(search.str, winner, perl=T)), evt.id, loser)), row.names=F)
names(my.losers) <- c('winner','evt.id','losers')
return(my.losers)
}
lapply(c(2444,27), get.losers)
get.losers <- function(win.id){
search.str <- paste('(^|,)',win.id,'(,|$)', sep="")
my.losers <- data.frame(cbind(win.id,select(filter(df, grepl(search.str, winner, perl=T)), evt.id, loser)))
names(my.losers) <- c('winner','evt.id','losers')
return(my.losers)
}
lapply(c(2444,27), get.losers)
